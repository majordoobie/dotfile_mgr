" ------ Sources ------
" https://amine-elhattami.medium.com/destination-ideavim-day-1-the-basics-793a514af57f
" https://towardsdatascience.com/the-essential-ideavim-remaps-291d4cd3971b
" https://github.com/JetBrains/ideavim/wiki/%22set%22-commands
" Find more examples here: https://jb.gg/share-ideavimrc
" https://stackoverflow.com/questions/3776117/what-is-the-difference-between-the-remap-noremap-nnoremap-and-vnoremap-mapping
" https://gist.github.com/zchee/9c78f91cc5ad771c1f5d


" ##################################################################################################
" ------ Global Changes ------
" Set nerd tree
set NERDTree

" Leader key is the spacebar
let mapleader = " "

" Don't use Ex mode, use Q for formatting.
map Q gq

" Allow the use of the normal copy buffer
set clipboard+=unnamed
set clipboard+=ideaput

" Free the ctrl + k key binding that the IDE uses
sethandler <c-k> a:vim

" Quickly reload vimrc
nnoremap \r :action IdeaVim.ReloadVimRc.reload<CR>

" Put x/r into the black hole register so they don't get copied. So if I want
" to cut a paste, use select + d. If I just want to delete use select + x
nnoremap x "_x
nnoremap r "_r

" Map the indentation to work with the group indentation
vnoremap < <gv
vnoremap > >gv

"^$ The symbol is too hard to press
map gh ^
map gl $

" Join things together like comments and method chaining. Activated with shift+j
set ideajoin

" When refactoring, what vim mode should you be in. Visual allows you to quickly delete or esp to edit
set idearefactormode=visual

" ##################################################################################################
" ------ Modify Scrolling Behaviors -------

" Number of lines to show above and below cursor. Useful for using ctrl + U/D
set scrolloff=15
" Set relative paths
set relativenumber

" ##################################################################################################
" ------ Modify Search Behaviors -------

" Do incremental searching.
set incsearch
" Highlight search results
set hlsearch
" Wrap around the file when searching
set wrapscan
" Map the enter key to CLEAR the highlight from the last search
nnoremap <CR> :noh<CR><CR>


" ##################################################################################################
" ------ Pane Manipulation Behaviors -------

" Open panes as duplicates and resize
map <leader>- <Action>(SplitHorizontally)
map <leader>_ <Action>(SplitVertically)
map <a-m> <Action>(MaximizeEditorInSplit)
map <a-k> <Action>(StretchSplitToTop)
map <a-j> <Action>(StretchSplitToBottom)
map <a-h> <Action>(StretchSplitToLeft)
map <a-l> <Action>(StretchSplitToRight)

" Closing Panes "close close" and "close all"
map <Leader>qq <Action>(CloseContent)
map <Leader>qa <Action>(CloseAllEditors)

" Sets hjkl as pane movement keys
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k

" Code Blocks; "pane block-open" "pane block-close" "pane global-block-open"
map <leader>po <Action>(ExpandRegionRecursively)                | " Open fold
map <leader>pc <Action>(CollapseRegionRecursively)              | " Close fold

map <leader>pgo <Action>(ExpandAllRegions)                      | " Open ALL folds
map <leader>pgc <Action>(CollapseAllRegions)                    | " Close ALL folds

" Enable zen mode
map <leader>pz <Action>(ToggleDistractionFreeMode)              | " Toggle zen mode

" ##################################################################################################
" ------ G: GoTo - These commands open up GUI elements -------

" Opening Tool Windows
map <leader>g1 <Action>(ActivateRunToolWindow)                  | " Open the run window
map <leader>g2 <Action>(ActivateDebugToolWindow)                | " Open the debug window
map <leader>gt <Action>(ActivateTerminalToolWindow)             | " Open the terminal
map <leader>gc <Action>(ActivateCommitToolWindow)               | " Open the commit modal
map <leader>gd <Action>(ActivateDatabaseToolWindow)             | " Open the database window
map <leader>gy <Action>(ActivatePythonConsoleToolWindow)        | " Open iPython window
map <leader>go <Action>(ActivateTODOToolWindow)                 | " Open todo window
map <leader>gv <Action>(ActivateVersionControlToolWindow)       | " Open version control (the git button)
map <leader>gm <Action>(ActivateMessagesToolWindow)
map <leader>gx <Action>(BuildMenu)

" Search Box; The all is opened with shift + shift on all platforms
map <leader>gf <Action>(GotoFile)                               | " Open file fuzzy finder
map gf :NERDTree <CR>
map <leader>ga <Action>(GotoAction)                             | " Open Command pallet
map <leader>gp <Action>(ActivateProjectToolWindow)              | " Open the file structure

" Open Sub Menus
map <leader>ghl <Action>(RecentLocations)                       | " Open the last places you changed code
map <leader>ghk <Action>(LocalHistory.ShowHistory)              | " Open time based window with all your changes
map <leader>gb <Action>(ViewBreakpoints)                        | " Open all the breakpoints set


" ##################################################################################################
" ------ Code Editing Behaviors -------

" Edit code
map <leader>eo <Action>(OptimizeImports)                        | " Optimize the imports by removing those not used
map <leader>ef <Action>(ReformatCode)                           | " Refactor the file or selected
map <leader>es <Action>(SurroundWith)                           | " Open submenu for picking what to add for, while, if
map <leader>er <Action>(Refactorings.QuickListPopupAction)      | " Open menu for refactoring


" ##################################################################################################
" ------ View Information About The Code
map <leader>vu <Action>(FindUsages)                             | " View all the calls to it
map <leader>vd <Action>(QuickJavaDoc)                           | " View docstrings
map <leader>vi <Action>(QuickImplementations)                   | " View code of function
map <leader>vp <Action>(ParameterInfo)                          | " Quick look at the parameters of the function
map <leader>vr <Action>(ChooseRunConfiguration)                 | " Select a run configuration
map <leader>vh <Action>(ViewCallHierarchy)
map <leader>vb <Action>(ByteCodeViewer)

" ##################################################################################################
" --- Jump To
map <leader>jd <Action>(GotoDeclaration)
map <leader>jn <Action>(GotoNextError)
map <leader>jt <Action>(GotoTest)
map <leader>jl <Action>(Forward)
map <leader>jh <Action>(Back)
map <leader>jp <Action>(NewScratchFile)
map <leader>js <Action>(FileStructurePopup)                     | " Open up the structure of the code such as symbols

" ##################################################################################################
" ------ Code Execution -------
map <leader>1 <Action>(Run)
map <leader>2 <Action>(Debug)
map <leader>0 <Action>(Stop)
map <leader>bb <Action>(ToggleLineBreakpoint)
map <leader>br <Action>(Debugger.RemoveAllBreakpoints)








